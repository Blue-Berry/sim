open! Core
open! Utils.Morton128

(* type t = Utils.Morton126.t = { high : int; low : int } *)
let%expect_test "Int128" =
  let open Int128 in
  print_s [%sexp (zero : Int128.t)];
  [%expect {| 0x00000000000000000 |}];
  print_s [%sexp (one : Int128.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (of_int 16 : Int128.t)];
  [%expect {| 0x00000000000000010 |}];
  print_s [%sexp (shift_left one 1 : Int128.t)];
  [%expect {| 0x00000000000000002 |}];
  print_s [%sexp (shift_left one 63 : Int128.t)];
  [%expect {| 0x08000000000000000 |}];
  print_s [%sexp (shift_left one 64 : Int128.t)];
  [%expect {| 0x10000000000000000 |}];
  print_s [%sexp (shift_left one 120 : Int128.t)];
  [%expect {| 0x1000000000000000000000000000000 |}];
  let { low; high } = shift_left one 120 in
  printf "Low: %d; High: %d;" (Unsigned.UInt64.to_int low) (Unsigned.UInt64.to_int high);
  [%expect {| Low: 0; High: 72057594037927936; |}];
  print_s [%sexp (shift_left one 127 : Int128.t)];
  [%expect {| 0x80000000000000000000000000000000 |}];
  print_s [%sexp (shift_right_logical (shift_left one 63) 63 : Int128.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (shift_right_logical (shift_left one 64) 64 : Int128.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (shift_right_logical (shift_left one 64) 3 : Int128.t)];
  [%expect {| 0x02000000000000000 |}];
  print_s [%sexp (shift_right_logical (shift_left one 127) 127 : Int128.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (compare zero one : int)];
  [%expect {| -1 |}];
  print_s [%sexp (test_bit (shift_left one 120) 120 : bool)];
  [%expect {| true |}];
  print_s [%sexp (test_bit one 0 : bool)];
  [%expect {| true |}];
  print_s [%sexp (test_bit (shift_left one 1) 1 : bool)];
  [%expect {| true |}];
  print_s [%sexp (test_bit (shift_left one 63) 63 : bool)];
  [%expect {| true |}];
  print_s [%sexp (test_bit (shift_left one 64) 64 : bool)];
  [%expect {| true |}];
  print_s [%sexp (test_bit (shift_left one 120) 120 : bool)];
  [%expect {| true |}];
  print_s [%sexp (add (shift_left one 63) (shift_left one 63) : Int128.t)];
  [%expect {| 0x10000000000000000 |}];
  print_s [%sexp (of_hex "0x80000000000000000000000000000000" : Int128.t)];
  [%expect {| 0x80000000000000000000000000000000 |}];
  print_s [%sexp (sexp_of_t one : Sexp.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (t_of_sexp (Sexp.of_string "0x00000000000000001") : Int128.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (popcount (of_hex "0xff") : int)];
  [%expect {| 8 |}]
;;

(* TODO:  val encode : int -> int -> int -> Int128.t *)
(* TODO:  val decode : Int128.t -> int * int * int *)
(* TODO:  val point_to_grid : Physics.point -> Utils.Bb.t -> int * int * int *)
(* TODO:  val encode_point : Physics.point -> Utils.Bb.t -> Int128.t *)
(* TODO:  val parent_morton : Int128.t -> Int128.t *)
(* TODO:  val morton_at_level : Int128.t -> int -> Int128.t *)

let%expect_test "encode" =
  print_s [%sexp (encode 0 0 0 : Int128.t)];
  [%expect {| 0x00000000000000000 |}];
  print_s [%sexp (encode 1 0 0 : Int128.t)];
  [%expect {| 0x00000000000000001 |}];
  print_s [%sexp (encode 1 1 1 : Int128.t)];
  [%expect {| 0x00000000000000007 |}]
;;

let%expect_test "decode" =
  let x, y, z = decode Int128.one in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x00000000000000001
    x: 1; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    x: 1; y: 0; z: 0;
    |}];
  let x, y, z = decode (Int128.of_hex "0x000000000000000000000000000000") in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    x: 0; y: 0; z: 0;
    |}];
  let x, y, z = decode (Int128.of_hex "0x000000000000000000000000000001") in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x00000000000000001
    x: 1; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 0; z: 0;
    x: 1; y: 0; z: 0;
    |}];
  let x, y, z = decode (Int128.of_hex "0x000000000000000000000000000007") in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x00000000000000007
    x: 1; y: 1; z: 1;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1; y: 1; z: 1;
    x: 1; y: 1; z: 1;
    |}];
  let x, y, z = decode (Int128.of_hex "0x00000000000000ffffffffffffffff") in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x0ffffffffffffffff
    x: 1; y: 1; z: 1;
    ACC: x: 0; y: 0; z: 0;
    0x01fffffffffffffff
    x: 2; y: 2; z: 2;
    ACC: x: 1; y: 1; z: 1;
    0x003ffffffffffffff
    x: 4; y: 4; z: 4;
    ACC: x: 3; y: 3; z: 3;
    0x0007fffffffffffff
    x: 8; y: 8; z: 8;
    ACC: x: 7; y: 7; z: 7;
    0x0000fffffffffffff
    x: 16; y: 16; z: 16;
    ACC: x: 15; y: 15; z: 15;
    0x00001ffffffffffff
    x: 32; y: 32; z: 32;
    ACC: x: 31; y: 31; z: 31;
    0x000003fffffffffff
    x: 64; y: 64; z: 64;
    ACC: x: 63; y: 63; z: 63;
    0x0000007ffffffffff
    x: 128; y: 128; z: 128;
    ACC: x: 127; y: 127; z: 127;
    0x0000000ffffffffff
    x: 256; y: 256; z: 256;
    ACC: x: 255; y: 255; z: 255;
    0x00000001fffffffff
    x: 512; y: 512; z: 512;
    ACC: x: 511; y: 511; z: 511;
    0x000000003ffffffff
    x: 1024; y: 1024; z: 1024;
    ACC: x: 1023; y: 1023; z: 1023;
    0x0000000007fffffff
    x: 2048; y: 2048; z: 2048;
    ACC: x: 2047; y: 2047; z: 2047;
    0x0000000000fffffff
    x: 4096; y: 4096; z: 4096;
    ACC: x: 4095; y: 4095; z: 4095;
    0x00000000001ffffff
    x: 8192; y: 8192; z: 8192;
    ACC: x: 8191; y: 8191; z: 8191;
    0x000000000003fffff
    x: 16384; y: 16384; z: 16384;
    ACC: x: 16383; y: 16383; z: 16383;
    0x0000000000007ffff
    x: 32768; y: 32768; z: 32768;
    ACC: x: 32767; y: 32767; z: 32767;
    0x0000000000000ffff
    x: 65536; y: 65536; z: 65536;
    ACC: x: 65535; y: 65535; z: 65535;
    0x00000000000001fff
    x: 131072; y: 131072; z: 131072;
    ACC: x: 131071; y: 131071; z: 131071;
    0x000000000000003ff
    x: 262144; y: 262144; z: 262144;
    ACC: x: 262143; y: 262143; z: 262143;
    0x0000000000000007f
    x: 524288; y: 524288; z: 524288;
    ACC: x: 524287; y: 524287; z: 524287;
    0x0000000000000000f
    x: 1048576; y: 1048576; z: 1048576;
    ACC: x: 1048575; y: 1048575; z: 1048575;
    0x00000000000000001
    x: 2097152; y: 0; z: 0;
    ACC: x: 2097151; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 4194303; y: 2097151; z: 2097151;
    x: 4194303; y: 2097151; z: 2097151;
    |}];
  let x, y, z = decode Int128.(shift_left one 63) in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x08000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x01000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00200000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00040000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00008000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00001000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000200000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000040000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000008000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000001000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000200000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000040000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000008000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000001000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000200000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000040000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000008000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000001000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000200
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000040
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000008
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000001
    x: 2097152; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 2097152; y: 0; z: 0;
    x: 2097152; y: 0; z: 0;
    |}];
  let x, y, z = decode Int128.(shift_left one 64) in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x10000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x02000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00400000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00080000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00010000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00002000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000400000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000080000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000010000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000002000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000400000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000080000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000010000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000002000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000400000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000080000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000010000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000002000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000400
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000080
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000010
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000002
    x: 0; y: 2097152; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 2097152; z: 0;
    x: 0; y: 2097152; z: 0;
    |}];
  let x, y, z = decode Int128.(shift_left one 120) in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x1000000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x200000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x40000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x8000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x1000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x200000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x40000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x8000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x1000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x200000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x40000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x8000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x1000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x200000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x40000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x8000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x1000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x200000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x40000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x08000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x01000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00200000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00040000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00008000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00001000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000200000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000040000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000008000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000001000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000200000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000040000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000008000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000001000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000200000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000040000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000008000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000001000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000200
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000040
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000008
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000001
    x: 1099511627776; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 1099511627776; y: 0; z: 0;
    x: 1099511627776; y: 0; z: 0;
    |}];
  let x, y, z = decode Int128.(shift_left one 127) in
  Printf.printf "x: %d; y: %d; z: %d;" x y z;
  [%expect {|
    0x80000000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x10000000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x2000000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x400000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x80000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x10000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x2000000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x400000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x80000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x10000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x2000000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x400000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x80000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x10000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x2000000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x400000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x80000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x10000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x2000000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x400000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x80000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x10000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x02000000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00400000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00080000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00010000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00002000000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000400000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000080000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000010000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000002000000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000400000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000080000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000010000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000002000000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000400000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000080000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000010000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000002000
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000400
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000080
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    0x00000000000000010
    x: 0; y: 0; z: 0;
    ACC: x: 0; y: 0; z: 0;
    x: 0; y: 0; z: 0;
    |}]
;;
